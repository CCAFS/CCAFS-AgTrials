<?php

/**
 * TbTrialsite
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    trialsites
 * @subpackage model
 * @author     Herlin R. Espinosa G. - CIAT-DAPA
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class TbTrialsite extends BaseTbTrialsite {

    public function __toString() {
        return $this->getTrstname() . " - " . $this->getTbCountry() . " - " . $this->getTbInstitution();
    }

    //INICIO FUNCION PARA GRABAR O ACTUALIZAR
    public function save(Doctrine_Connection $conn = null) {

        //REGISTRO DE USUARIO DE CREACION O ACTUALIZACION
        $id_user = sfContext::getInstance()->getUser()->getAttribute('user_id', '', 'sfGuardSecurityUser');
        if ($this->isNew()) {
            $this->setIdUser($id_user);
            $this->setIdUserUpdate(null);
        } else {
            if ($this->getIdUser() == null)
                $this->setIdUser(null);
            $this->setIdUserUpdate($id_user);
        }

        $SF_username = sfContext::getInstance()->getUser()->getUsername();

        if ($this->isNew()) {
            $SfGuardUser = Doctrine::getTable('SfGuardUser')->findOneById($id_user);
            $UserEmailAddress = $SfGuardUser->getEmailAddress();
            if (!(@ereg("^[_a-zA-Z0-9-]+(\.[_a-zA-Z0-9-]+)*@+([_a-zA-Z0-9-]+\.)*[a-zA-Z0-9-]{2,200}\.[a-zA-Z]{2,6}$", $UserEmailAddress))) {
                echo "<script> alert('*** Email Address Error! ***'); window.history.back();</script>";
                die();
            }
            //ENVIO DE NOTIFICACION A USUARIO QUE CREO EL TRIAL SITE
            $Trstname = trim($this->getTrstname());
            $sent = date("d-M-Y") . " " . date("h:i:s");
            $destinatario = trim($UserEmailAddress);
            $asunto = "AgTrials - Trial Site - Pending for Activation - Don't reply";
            $cuerpo = "<html>";
            $cuerpo .= "<head>";
            $cuerpo .= "<title>AgTrials - Trial Site - Pending for Activation - Don't reply</title>";
            $cuerpo .= "</head>";
            $cuerpo .= "<body>";
            $cuerpo .= "<h1>Pending for Activation!</h1>";
            $cuerpo .= "<p>";
            $cuerpo .= "<b>Trial Site: </b>$Trstname<br>";
            $cuerpo .= "<b>Is active: </b>NO<br>";
            $cuerpo .= "<b>Created By: </b>$SF_username<br><br><br>";
            $cuerpo .= "</p>";
            $cuerpo .= "<br><br><b>Sent:</b> $sent ";
            $cuerpo .= "</body>";
            $cuerpo .= "</html>";
            $headers = "MIME-Version: 1.0\r\n";
            $headers .= "Content-type: text/html; charset=iso-8859-1\r\n";
            $headers .= "From: Trial Sites - Don't reply <noreplyagtrials@gmail.com>\r\n";
            if (!mail($destinatario, $asunto, $cuerpo, $headers)) {
                echo "<script> alert('*** Email Error! ***'); window.history.back();</script>";
                die();
            }

            //ENVIO DE NOTIFICACION AL ADMINISTRADOR
            $sent = date("d-M-Y") . " " . date("h:i:s");
            $destinatario = "noreplyagtrials@gmail.com";
            $asunto = "AgTrials - Trial Site - Pending for Activation - Don't reply";
            $cuerpo = "<html>";
            $cuerpo .= "<head>";
            $cuerpo .= "<title>AgTrials - Trial Site -Pending for Activation - Don't reply</title>";
            $cuerpo .= "</head>";
            $cuerpo .= "<body>";
            $cuerpo .= "<h1>Pending for Activation!</h1>";
            $cuerpo .= "<p>";
            $cuerpo .= "<b>Trial Site: </b>$Trstname<br>";
            $cuerpo .= "<b>Is active: </b>NO<br>";
            $cuerpo .= "<b>Created By: </b>$SF_username<br><br><br>";
            $cuerpo .= "<a href='http://www.agtrials.org/tbtrialsite' target='blank'>Go Trial Sites</a><br><br>";
            $cuerpo .= "</p>";
            $cuerpo .= "<br><br><b>Sent:</b> $sent ";
            $cuerpo .= "</body>";
            $cuerpo .= "</html>";
            $headers = "MIME-Version: 1.0\r\n";
            $headers .= "Content-type: text/html; charset=iso-8859-1\r\n";
            $headers .= "From: Trial Sites - Don't reply <noreplyagtrials@gmail.com>\r\n";
            if (!mail($destinatario, $asunto, $cuerpo, $headers)) {
                echo "<script> alert('*** Email Error! ***'); window.history.back();</script>";
                die();
            }
        } else {
            $id_trialsite = $this->getIdTrialsite();
            $TbTrialsite = Doctrine::getTable('TbTrialsite')->findOneByIdTrialsite($id_trialsite);
            $trstactive = $TbTrialsite->getTrstactive();
            $id_user_created = $TbTrialsite->getIdUser();
            $trstactive_new = $this->getTrstactive();
            $Trstname = $this->getTrstname();
            $SfGuardUser = Doctrine::getTable('SfGuardUser')->findOneById($id_user_created);
            $UserEmailAddress = $SfGuardUser->getEmailAddress();
            if (!(@ereg("^[_a-zA-Z0-9-]+(\.[_a-zA-Z0-9-]+)*@+([_a-zA-Z0-9-]+\.)*[a-zA-Z0-9-]{2,200}\.[a-zA-Z]{2,6}$", $UserEmailAddress))) {
                echo "<script> alert('*** Email Address Error! ***'); window.history.back();</script>";
                die();
            }
            if ($trstactive_new == 1)
                $status = "YES";
            else
                $status = "NO";
            if (($trstactive != $trstactive_new) && ($status == "YES")) {
                //ENVIO DE NOTIFICACION A USUARIO QUE CREO EL TRIAL SITE y AL ADMINISTRADOR INFORMANDO SU ACTIVACION
                $sent = date("d-M-Y") . " " . date("h:i:s");
                $destinatario = trim($UserEmailAddress) . ",noreplyagtrials@gmail.com";
                $asunto = "AgTrials - Trial Site - Change Status - Don't reply";
                $cuerpo = "<html>";
                $cuerpo .= "<head>";
                $cuerpo .= "<title>AgTrials - Trial Site - Change Status - Don't reply</title>";
                $cuerpo .= "</head>";
                $cuerpo .= "<body>";
                $cuerpo .= "<h1>Change Status!</h1>";
                $cuerpo .= "<p>";
                $cuerpo .= "<b>Trial Site: </b>$Trstname<br>";
                $cuerpo .= "<b>Is active: </b>$status<br>";
                $cuerpo .= "<b>Activated By: </b>$SF_username<br><br><br>";
                $cuerpo .= "<a href='http://www.agtrials.org/tbtrialsite/$id_trialsite/edit' target='blank'>Go Trial Site</a><br><br>";
                $cuerpo .= "</p>";
                $cuerpo .= "<br><br><b>Sent:</b> $sent ";
                $cuerpo .= "</body>";
                $cuerpo .= "</html>";
                $headers = "MIME-Version: 1.0\r\n";
                $headers .= "Content-type: text/html; charset=iso-8859-1\r\n";
                $headers .= "From: Trial Sites - Don't reply <noreplyagtrials@gmail.com>\r\n";
                if (!mail($destinatario, $asunto, $cuerpo, $headers)) {
                    echo "<script> alert('*** Email Error! ***'); window.history.back();</script>";
                    die();
                }
            }
        }
        //FIN:ENVIO DE CORREO PARA LA POSTERIOR ACTIVACION
        return parent::save($conn);
    }

    //CONFIGURACION PARA GUARDAR CREATE AT Y UPDATE AT
    public function setUp() {
        parent::setUp();
        $this->hasOne('TbTaxonomyfao', array(
            'local' => 'id_taxonomyfao',
            'foreign' => 'id_taxonomyfao'));

        $this->hasOne('TbSoil', array(
            'local' => 'id_soil',
            'foreign' => 'id_soil'));

        $this->hasOne('TbLocation', array(
            'local' => 'id_location',
            'foreign' => 'id_location'));

        $this->hasOne('TbInstitution', array(
            'local' => 'id_institution',
            'foreign' => 'id_institution'));

        $this->hasOne('TbCountry', array(
            'local' => 'id_country',
            'foreign' => 'id_country'));

        $this->hasOne('TbContactperson', array(
            'local' => 'id_contactperson',
            'foreign' => 'id_contactperson'));

        $this->hasMany('TbFieldnamenumber', array(
            'local' => 'id_trialsite',
            'foreign' => 'id_trialsite'));

        $this->hasMany('TbTrial', array(
            'local' => 'id_trialsite',
            'foreign' => 'id_trialsite'));

        $timestampable0 = new Doctrine_Template_Timestampable(array());
        $this->actAs($timestampable0);
    }

}